// Code generated by Slice Machine. DO NOT EDIT.

import loadable from "@loadable/component";
import { graphql } from "gatsby";
import { SliceComponentProps } from "@prismicio/react";

import { CallToActionProps } from "./CallToAction";
import { HeroProps } from "./Hero";

type SliceFromSliceComponentProps<T> = T extends SliceComponentProps<infer U>
	? U
	: T;

export type PrismicPageDataBodySlice =
	| SliceFromSliceComponentProps<CallToActionProps>
	| SliceFromSliceComponentProps<HeroProps>;

export const prismicPageDataBodyComponents = {
	hero: loadable(async () => (await import("./Hero")).Hero),
	call_to_action: loadable(
		async () => (await import("./CallToAction")).CallToAction,
	),
};

export const fragments = graphql`
	fragment PrismicPageDataBody on PrismicPageDataBodySlicesType {
		... on PrismicSliceType {
			slice_type
		}
		... on PrismicSharedSliceType {
			variation
		}
		...PrismicCallToAction
		...PrismicHero
	}
`;
